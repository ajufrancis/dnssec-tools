#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

installdir=$(CURDIR)/debian/tmp

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

# shared library versions, option 1
version=2.0.5
major=2
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

validator/config.status: configure
	dh_testdir
	# Add here commands to configure the package.
	# XXX: actually need a script to use either .wlan0 or .gprs
	#cd validator && ./configure --sysconfdir=/etc --with-nsec3 --with-dlv --with-resolv-conf=/var/run/resolv.conf.wlan0 --with-root-hints=/etc/dnssec-tools/root.hints --with-dnsval-conf=/etc/dnssec-tools/dnsval.conf --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"
	#
	#	note: configuring with /etc/run/resolv.conf.wlan0 and
	#	patching the internal fallback to /etc/run/resolv.conf.gprs
	#	so at least one should be found
	cd validator && ./configure --sysconfdir=/etc --with-nsec3 --with-dlv --with-resolv-conf=/var/run/resolv.conf.wlan0 --with-root-hints=/etc/dnssec-tools/root.hints --with-dnsval-conf=/etc/dnssec-tools/dnsval.conf --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info CFLAGS="$(CFLAGS) -g -D_REENTRANT -fPIC" 
	# cd validator && cp ../libtool .

build: build-stamp
build-stamp:  validator/config.status
	dh_testdir

	# Add here commands to compile the package.
	cd validator && $(MAKE)

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	rm -rf debian/libval-threads debian/libval-threads-dev
	rm -rf debian/libval-shim debian/libsres debian/libsres-dev
	rm -rf debian/dns-validator debian/tmp

	# Add here commands to clean up after the build process.
	-cd validator && $(MAKE) distclean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cd validator && cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cd validator && cp -f /usr/share/misc/config.guess config.guess
endif


	dh_clean  --exclude ./apps/mozilla/firefox-files/netError.xhtml.orig --exclude ./apps/mozilla/firefox-files/prerr.properties.orig --exclude ./apps/mozilla/firefox-files/prnetdb.h.orig --exclude ./apps/mozilla/firefox-files/nsSocketTransport2.cpp.orig --exclude ./apps/mozilla/firefox-files/nsProtocolProxyService.cpp.orig --exclude ./apps/mozilla/firefox-files/autoconf.mk.in.orig --exclude ./apps/mozilla/firefox-files/nsIDNSRecord.idl.orig --exclude ./apps/mozilla/firefox-files/nsWebShell.cpp.orig --exclude ./apps/mozilla/firefox-files/nsDocShell.cpp.orig --exclude ./apps/mozilla/firefox-files/nsHostResolver.h.orig --exclude ./apps/mozilla/firefox-files/nsHostResolver.cpp.orig --exclude ./apps/mozilla/firefox-files/prerr.c.orig --exclude ./apps/mozilla/firefox-files/prerr.h.orig --exclude ./apps/mozilla/firefox-files/nsPACMan.cpp.orig --exclude ./apps/mozilla/firefox-files/nsDNSService2.cpp.orig --exclude ./apps/mozilla/firefox-files/nsNetError.h.orig --exclude ./apps/mozilla/firefox-files/netError.dtd.orig --exclude ./apps/mozilla/firefox-files/prerr.et.orig --exclude ./apps/mozilla/firefox-files/prnetdb.c.orig --exclude ./apps/mozilla/firefox-files/appstrings.properties.orig --exclude ./apps/mozilla/firefox-files/nsHttpChannel.cpp.orig --exclude ./apps/mozilla/firefox-files/nsSocketTransport2.h.orig --exclude ./apps/mozilla/firefox-files/nsIDNSService.idl.orig

install: build
	dh_testdir
	dh_testroot
	dh_clean -k  --exclude ./apps/mozilla/firefox-files/netError.xhtml.orig --exclude ./apps/mozilla/firefox-files/prerr.properties.orig --exclude ./apps/mozilla/firefox-files/prnetdb.h.orig --exclude ./apps/mozilla/firefox-files/nsSocketTransport2.cpp.orig --exclude ./apps/mozilla/firefox-files/nsProtocolProxyService.cpp.orig --exclude ./apps/mozilla/firefox-files/autoconf.mk.in.orig --exclude ./apps/mozilla/firefox-files/nsIDNSRecord.idl.orig --exclude ./apps/mozilla/firefox-files/nsWebShell.cpp.orig --exclude ./apps/mozilla/firefox-files/nsDocShell.cpp.orig --exclude ./apps/mozilla/firefox-files/nsHostResolver.h.orig --exclude ./apps/mozilla/firefox-files/nsHostResolver.cpp.orig --exclude ./apps/mozilla/firefox-files/prerr.c.orig --exclude ./apps/mozilla/firefox-files/prerr.h.orig --exclude ./apps/mozilla/firefox-files/nsPACMan.cpp.orig --exclude ./apps/mozilla/firefox-files/nsDNSService2.cpp.orig --exclude ./apps/mozilla/firefox-files/nsNetError.h.orig --exclude ./apps/mozilla/firefox-files/netError.dtd.orig --exclude ./apps/mozilla/firefox-files/prerr.et.orig --exclude ./apps/mozilla/firefox-files/prnetdb.c.orig --exclude ./apps/mozilla/firefox-files/appstrings.properties.orig --exclude ./apps/mozilla/firefox-files/nsHttpChannel.cpp.orig --exclude ./apps/mozilla/firefox-files/nsSocketTransport2.h.orig --exclude ./apps/mozilla/firefox-files/nsIDNSService.idl.orig
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	cd validator && $(MAKE) DESTDIR=${installdir} install

        # clear old left-over stuff
	rm -rf $(CURDIR)/debian/libval-shim

	# static libraries
	mkdir -p $(CURDIR)/debian/libval-threads-dev/usr/lib
	mkdir -p $(CURDIR)/debian/libsres-dev/usr/lib
	mv ${installdir}/usr/lib/libval-threads*a $(CURDIR)/debian/libval-threads-dev/usr/lib
	mv ${installdir}/usr/lib/libval-threads.so $(CURDIR)/debian/libval-threads-dev/usr/lib
	mv ${installdir}/usr/lib/libsres*a $(CURDIR)/debian/libsres-dev/usr/lib
	mv ${installdir}/usr/lib/libsres.so $(CURDIR)/debian/libsres-dev/usr/lib

	# dynamic libraries
	mkdir -p $(CURDIR)/debian/libval-threads/usr/lib
	mkdir -p $(CURDIR)/debian/libsres/usr/lib
	mkdir -p $(CURDIR)/debian/libval-shim/usr/lib
	mv ${installdir}/usr/lib/libval-threads* $(CURDIR)/debian/libval-threads/usr/lib
	mv ${installdir}/usr/lib/libsres* $(CURDIR)/debian/libsres/usr/lib
	mv ${installdir}/usr/lib/libval_shim* $(CURDIR)/debian/libval-shim/usr/lib

	# shlibs files defining the libraries in the package
	mkdir debian/libval-threads/DEBIAN
	mkdir debian/libsres/DEBIAN
	mkdir debian/libval-shim/DEBIAN
	install -m644 debian/shlibs.libval-threads debian/libval-threads/DEBIAN/shlibs
	install -m644 debian/shlibs.libsres debian/libsres/DEBIAN/shlibs
	install -m644 debian/shlibs.libval_shim debian/libval-shim/DEBIAN/shlibs

	# man pages
	mkdir -p $(CURDIR)/debian/libval-threads-dev/usr/share/man
	mkdir -p $(CURDIR)/debian/libval-threads/usr/share/man
	mv ${installdir}/usr/share/man/man3 $(CURDIR)/debian/libval-threads-dev/usr/share/man/
	mv ${installdir}/usr/share/man/man1 $(CURDIR)/debian/libval-threads/usr/share/man/

	# include files
	mv ${installdir}/usr/include $(CURDIR)/debian/libval-threads-dev/usr/

	# binaries
	mkdir -p $(CURDIR)/debian/dns-validator/usr/bin
	mv ${installdir}/usr/bin/libval-config $(CURDIR)/debian/dns-validator/usr/bin/
	mv ${installdir}/usr/bin/* $(CURDIR)/debian/dns-validator/usr/bin/

        # XXX: nuke the shim directory, which doesn't work on harmattan
	rm -rf `pwd`/debian/libval_shim

	# libtool finish the directories
	/bin/sh validator/libtool --mode=finish `pwd`/debian/libsres/usr/lib
	/bin/sh validator/libtool --mode=finish `pwd`/debian/libval-threads/usr/lib
	#/bin/sh libtool --mode=finish `pwd`/debian/libval_shim/usr/lib

	# config files
	mkdir -p $(CURDIR)/debian/libval-threads/etc/dnssec-tools
	cp validator/etc/dnsval.conf validator/etc/resolv.conf validator/etc/root.hints $(CURDIR)/debian/libval-threads/etc/dnssec-tools
	# this was generated with:
	# convertar -i itar:,dns/tods=1:dnssec-tools.org,dns/tods=1:dnssec-deployment.org libval-threads/write_expectations=1:dnsval.conf
	cp debian/dnsval.conf $(CURDIR)/debian/libval-threads/etc/dnssec-tools

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs -plibsres -V
	dh_makeshlibs -plibval-threads -V
#	dh_makeshlibs -plibval_shim -V
	dh_installdeb
	dh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info
	dh_gencontrol
	dh_md5sums
	#maemo-optify
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
